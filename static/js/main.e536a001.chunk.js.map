{"version":3,"sources":["TodoList/index.ts","TodoList/CloseIcon.svg","TodoList/TodoItem.tsx","TodoList/StatusFilter.tsx","TodoList/TodoCount.tsx","TodoList/TodoList.tsx","store.ts","kit.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TodoList","_rect","_path","_path2","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgCloseIcon","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","fillOpacity","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ForwardRef","Container","styled","div","Title","span","p","checked","Close","CloseIcon","TodoItem","data","markTodoCompleted","markTodoActive","removeTodo","status","onCheck","useCallback","onDelete","type","onChange","onClick","StatusTag","active","tags","label","undefined","StatusFilter","onStatusChange","map","tag","CountLabel","TodoCount","count","humanReadableLabel","TodoListContent","ActionRowContainer","onlyActiveTodo","todo","isListEmpty","activeTodoCount","filter","useState","selectedStatus","setSelectedStatus","onlySelectedStatus","useStore","create","persist","set","get","todoList","addTodo","newTodoItem","Date","now","item","name","AppContainer","AppTitle","h1","Input","input","App","inputValue","setInputValue","store","onInputChange","ev","value","onInputEnter","todoTitle","trim","autoFocus","placeholder","onInput","onKeyDown","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e536a001.chunk.js","sourcesContent":["import TodoList from \"./TodoList\";\n\nexport default TodoList;\n\nexport * from \"./interface\";\n","var _rect, _path, _path2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCloseIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 48 48\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"white\",\n    fillOpacity: 0.01\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14 14L34 34\",\n    stroke: \"currentColor\",\n    strokeWidth: 4,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"miter\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14 34L34 14\",\n    stroke: \"currentColor\",\n    strokeWidth: 4,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"miter\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCloseIcon);\nexport default __webpack_public_path__ + \"static/media/CloseIcon.cc723929.svg\";\nexport { ForwardRef as ReactComponent };","import { FC, useCallback } from \"react\";\nimport { Todo } from \"./interface\";\nimport styled from \"styled-components\";\nimport { ReactComponent as CloseIcon } from \"./CloseIcon.svg\";\n\nexport interface TodoItemProps {\n  data: Todo;\n\n  removeTodo(id: string): void;\n\n  markTodoActive(id: string): void;\n\n  markTodoCompleted(id: string): void;\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 16px;\n  padding: 2px 2px 2px 0;\n  border-radius: 2px;\n\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n`;\n\nconst Title = styled.span<{ checked?: boolean }>`\n  padding-left: 4px;\n  text-decoration: ${(p) => (p.checked ? \"line-through\" : \"none\")};\n  color: ${(p) => (p.checked ? \"#bababa\" : \"#161717\")};\n`;\n\nconst Close = styled(CloseIcon)`\n  font-size: 16px;\n  color: #161717;\n  visibility: hidden;\n  cursor: pointer;\n\n  ${Container}:hover & {\n    visibility: visible;\n  }\n`;\n\nconst TodoItem: FC<TodoItemProps> = (props) => {\n  const { data, markTodoCompleted, markTodoActive, removeTodo } = props;\n  const checked = data.status === \"completed\";\n\n  const onCheck = useCallback(() => {\n    if (data.status === \"active\") {\n      markTodoCompleted(data.id);\n    }\n    if (data.status === \"completed\") {\n      markTodoActive(data.id);\n    }\n  }, [data, markTodoCompleted, markTodoActive]);\n\n  const onDelete = useCallback(() => {\n    removeTodo(data.id);\n  }, [data, removeTodo]);\n\n  return (\n    <Container>\n      <label>\n        <input type=\"checkbox\" checked={checked} onChange={onCheck} />\n        <Title checked={checked}>{data.title}</Title>\n      </label>\n      <Close onClick={onDelete} />\n    </Container>\n  );\n};\n\nexport default TodoItem;\n","import { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { TodoStatus } from \"./interface\";\n\nexport interface StatusFilterProps {\n  status?: TodoStatus;\n\n  onStatusChange(status: TodoStatus | undefined): void;\n}\n\nconst StatusTag = styled.span<{ active?: boolean }>`\n  display: inline-block;\n  padding: 0 6px;\n  font-size: 12px;\n  border-radius: 12px;\n  border: 1px solid transparent;\n  margin-right: 4px;\n  cursor: pointer;\n  color: ${(p) => (p.active ? \"white\" : \"#979797\")};\n  background-color: ${(p) => (p.active ? \"#979797\" : \"\")};\n\n  &: hover {\n    border-color: #979797;\n  }\n`;\n\nconst tags = [\n  { label: \"All\", status: undefined },\n  { label: \"Active\", status: \"active\" },\n  { label: \"Completed\", status: \"completed\" },\n] as const;\n\nconst StatusFilter: FC<StatusFilterProps> = (props) => {\n  const { status, onStatusChange } = props;\n\n  return (\n    <div>\n      {tags.map((tag) => (\n        <StatusTag\n          active={status === tag.status}\n          onClick={() => onStatusChange(tag.status)}\n        >\n          {tag.label}\n        </StatusTag>\n      ))}\n    </div>\n  );\n};\n\nexport default StatusFilter;\n","import { FC } from \"react\";\nimport styled from \"styled-components\";\n\nexport interface TodoCountProps {\n  count: number;\n}\n\nconst Container = styled.span`\n  font-size: 12px;\n  color: #979797;\n`;\n\nconst CountLabel = styled.span`\n  padding: 0 2px;\n`;\n\nconst TodoCount: FC<TodoCountProps> = (props) => {\n  const { count } = props;\n  const humanReadableLabel = count > 99 ? \"99+\" : count;\n\n  return (\n    <Container>\n      <CountLabel>{humanReadableLabel}</CountLabel>\n      items left\n    </Container>\n  );\n};\n\nexport default TodoCount;\n","import { FC, useCallback, useState } from \"react\";\nimport { Todo, TodoStatus } from \"./interface\";\nimport TodoItem from \"./TodoItem\";\nimport StatusFilter from \"./StatusFilter\";\nimport styled from \"styled-components\";\nimport TodoCount from \"./TodoCount\";\n\nexport interface TodoListProps {\n  data: Todo[];\n\n  removeTodo(id: string): void;\n\n  markTodoActive(id: string): void;\n\n  markTodoCompleted(id: string): void;\n}\n\nconst TodoListContent = styled.div`\n  margin-top: 6px;\n`;\n\nconst ActionRowContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nfunction onlyActiveTodo(todo: Todo) {\n  return todo.status === \"active\";\n}\n\nconst TodoList: FC<TodoListProps> = (props) => {\n  const { data, removeTodo, markTodoActive, markTodoCompleted } = props;\n  const isListEmpty = data.length === 0;\n  const activeTodoCount = data.filter(onlyActiveTodo).length;\n\n  const [selectedStatus, setSelectedStatus] =\n    useState<TodoStatus | undefined>(undefined);\n\n  const onlySelectedStatus = useCallback(\n    (todo: Todo) => {\n      if (!selectedStatus) {\n        return true;\n      }\n      return todo.status === selectedStatus;\n    },\n    [selectedStatus]\n  );\n\n  return (\n    <div>\n      {!isListEmpty && (\n        <ActionRowContainer>\n          <StatusFilter\n            status={selectedStatus}\n            onStatusChange={setSelectedStatus}\n          />\n          <TodoCount count={activeTodoCount} />\n        </ActionRowContainer>\n      )}\n\n      <TodoListContent>\n        {data.filter(onlySelectedStatus).map((todo) => (\n          <TodoItem\n            key={todo.id}\n            data={todo}\n            removeTodo={removeTodo}\n            markTodoActive={markTodoActive}\n            markTodoCompleted={markTodoCompleted}\n          />\n        ))}\n      </TodoListContent>\n    </div>\n  );\n};\n\nexport default TodoList;\n","import create from \"zustand\";\nimport { persist } from \"zustand/middleware\";\nimport { Todo } from \"./TodoList\";\nimport { uniqId } from \"./kit\";\n\nexport interface Store {\n  todoList: Todo[];\n\n  addTodo(title: string): Todo;\n\n  removeTodo(id: string): void;\n\n  markTodoActive(id: string): void;\n\n  markTodoCompleted(id: string): void;\n}\n\nexport const useStore = create<Store>(\n  persist(\n    (set, get) => ({\n      todoList: [],\n\n      addTodo: (title: string) => {\n        const newTodoItem: Todo = { id: uniqId(), title, status: \"active\" };\n        set({ todoList: [...get().todoList, newTodoItem] });\n        return newTodoItem;\n      },\n      removeTodo: (id: string) => {\n        set({ todoList: get().todoList.filter((item) => item.id !== id) });\n      },\n      markTodoCompleted: (id: string) => {\n        set({\n          todoList: get().todoList.map((item) => {\n            if (item.id === id) {\n              return { ...item, status: \"completed\" };\n            }\n            return item;\n          }),\n        });\n      },\n      markTodoActive: (id: string) => {\n        set({\n          todoList: get().todoList.map((item) => {\n            if (item.id === id) {\n              return { ...item, status: \"active\" };\n            }\n            return item;\n          }),\n        });\n      },\n    }),\n    {\n      name: \"todo-storage\",\n    }\n  )\n);\n","export function uniqId() {\n  return `uniqId-${Date.now()}`;\n}\n","import React, {\n  ChangeEventHandler,\n  KeyboardEventHandler,\n  useCallback,\n  useState,\n} from \"react\";\nimport { useStore } from \"./store\";\nimport TodoList from \"./TodoList\";\nimport styled from \"styled-components\";\n\nconst AppContainer = styled.div`\n  padding: 24px;\n  width: 320px;\n`;\n\nconst AppTitle = styled.h1`\n  font-size: 18px;\n  color: rgba(0, 0, 0, 0.9);\n`;\n\nconst Input = styled.input`\n  margin-bottom: 12px;\n  padding: 6px;\n  width: 100%;\n  appearance: none;\n  border: 1px solid rgba(0, 0, 0, 0.4);\n  border-radius: 2px;\n  outline-width: 1px;\n  outline-color: rgba(0, 0, 0, 0.7);\n`;\n\nfunction App() {\n  const [inputValue, setInputValue] = useState<string>(\"\");\n  const store = useStore();\n\n  const onInputChange: ChangeEventHandler<HTMLInputElement> = useCallback(\n    (ev) => {\n      setInputValue(ev.target.value);\n    },\n    [setInputValue]\n  );\n  const onInputEnter: KeyboardEventHandler<HTMLInputElement> = useCallback(\n    (ev) => {\n      if (ev.key === \"Enter\") {\n        const todoTitle = inputValue.trim();\n        if (todoTitle) {\n          store.addTodo(todoTitle);\n          setInputValue(\"\");\n        }\n      }\n    },\n    [inputValue, setInputValue, store]\n  );\n\n  return (\n    <AppContainer>\n      <AppTitle>Things Todo</AppTitle>\n\n      <main>\n        <Input\n          autoFocus\n          type=\"text\"\n          placeholder=\"write something to be done...\"\n          value={inputValue}\n          onInput={onInputChange}\n          onKeyDown={onInputEnter}\n        />\n        <TodoList\n          data={store.todoList}\n          removeTodo={store.removeTodo}\n          markTodoActive={store.markTodoActive}\n          markTodoCompleted={store.markTodoCompleted}\n        />\n      </main>\n    </AppContainer>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}